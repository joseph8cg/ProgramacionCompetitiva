#include <iostream>
#include <vector>

void generarSubconjuntos(std::vector<int>& nums, std::vector<int>& subconjunto, int index) {
    // Imprimir el subconjunto actual
    std::cout << "{ ";
    for (int num : subconjunto) {
        std::cout << num << " ";
    }
    std::cout << "}" << std::endl;

    // Recorrer el arreglo desde el índice actual
    for (int i = index; i < nums.size(); ++i) {
        // Agregar el elemento actual al subconjunto
        subconjunto.push_back(nums[i]);

        // Llamar recursivamente a la función para generar subconjuntos con el siguiente índice
        generarSubconjuntos(nums, subconjunto, i + 1);

        // Eliminar el último elemento para generar otros subconjuntos
        subconjunto.pop_back();
    }
}

int main() {
    std::vector<int> nums = {1, 2, 3};

    std::vector<int> subconjunto;
    generarSubconjuntos(nums, subconjunto, 0);

    return 0;
}

SALIDA:
{ }
{ 1 }
{ 1 2 }
{ 1 2 3 }
{ 1 3 }
{ 2 }
{ 2 3 }
{ 3 }
